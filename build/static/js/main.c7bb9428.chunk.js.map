{"version":3,"sources":["services/persons.js","index.js"],"names":["baseUrl","persons","getAll","axios","get","then","res","data","create","personObject","post","remove","id","delete","concat","update","console","log","put","Ilmoitus","_ref","msg","react_default","a","createElement","className","Numero","props","info","name","number","onClick","handleRemove","Filtteri","value","filter","onChange","handleFilterChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","window","confirm","personService","auxPersons","state","obj","setState","clearMsg","event","target","handleNewNumber","newNumber","handleNewName","newName","setTimeout","handleNameSubmit","preventDefault","find","changedPersonObject","objectSpread","updated","catch","error","_this2","_this3","personsToShow","toLowerCase","includes","src_Ilmoitus","src_Filtteri","onSubmit","type","map","e","src_Numero","key","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"8PACMA,EAAU,eAuBDC,EAAA,CAAEC,OArBF,WAEX,OADYC,IAAMC,IAAIJ,GACXK,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QAmBNC,OAhBV,SAACC,GAEZ,OADaN,IAAMO,KAAKV,EAASS,GACtBJ,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QAcEI,OAXlB,SAACC,GAEZ,OADYT,IAAMU,OAAN,GAAAC,OAAgBd,EAAhB,KAAAc,OAA2BF,IAC5BP,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QASUQ,OAN1B,SAACN,GAGZ,OAFAO,QAAQC,IAAIR,GACAN,IAAMe,IAAN,GAAAJ,OAAad,EAAb,KAAAc,OAAwBL,EAAaG,IAAMH,GAC5CJ,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SChBzBY,SAAW,SAAAC,GAAW,IAATC,EAASD,EAATC,IACjB,OAAY,OAARA,EACK,KAGPC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZJ,KAMDK,EAAS,SAACC,GACd,OACGL,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,UAAKG,EAAMC,KAAKC,MAChBP,EAAAC,EAAAC,cAAA,UAAKG,EAAMC,KAAKE,QAChBR,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQO,QAASJ,EAAMK,cAAvB,aAKJC,EAAW,SAACN,GAChB,OACEL,EAAAC,EAAAC,cAAA,0CACmBF,EAAAC,EAAAC,cAAA,SAAOU,MAAOP,EAAMQ,OAAQC,SAAUT,EAAMU,uBAK7DC,cACJ,SAAAA,EAAYX,GAAO,IAAAY,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMf,KAURK,aAAe,SAACvB,GAAD,OAAkB,WAC/B,GAAGqC,OAAOC,QAAP,gBAAAjC,OAA+BL,EAAaoB,KAA5C,MAAsD,CACvDmB,EAAcrC,OAAOF,EAAaG,IAClC,IAAMqC,EAAaV,EAAKW,MAAMjD,QAAQkC,OAAO,SAAAgB,GAAG,OAAIA,EAAIvC,KAAOH,EAAaG,KAC5E2B,EAAKa,SAAS,CACZnD,QAASgD,EACT5B,IAAG,eAAAP,OAAiBL,EAAaoB,QAEnCU,EAAKc,cAnBUd,EAmCnBF,mBAAqB,SAACiB,GACpBf,EAAKa,SAAS,CACZjB,OAAQmB,EAAMC,OAAOrB,SArCNK,EAyCnBiB,gBAAkB,SAACF,GACjBf,EAAKa,SAAS,CACZK,UAAWH,EAAMC,OAAOrB,SA3CTK,EA+CnBmB,cAAgB,SAACJ,GACff,EAAKa,SAAS,CACZO,QAASL,EAAMC,OAAOrB,SAjDPK,EAqDnBc,SAAW,WACTO,WAAW,WACTrB,EAAKa,SAAS,CAAC/B,IAAK,QACnB,MAxDckB,EA2DnBsB,iBAAmB,SAACP,GAElB,GADAA,EAAMQ,iBACFvB,EAAKW,MAAMjD,QAAQ8D,KAAK,SAAAxC,GAAC,OAAIA,EAAEM,OAASU,EAAKW,MAAMS,UAahD,CACL,IAAMlD,EAAe8B,EAAKW,MAAMjD,QAAQ8D,KAAK,SAAAxC,GAAC,OAAIA,EAAEM,OAASU,EAAKW,MAAMS,UAClEK,EAAmBxB,OAAAyB,EAAA,EAAAzB,CAAA,GAAO/B,EAAP,CAAqBqB,OAAQS,EAAKW,MAAMO,YAE9DX,OAAOC,QAAP,GAAAjC,OAAkByB,EAAKW,MAAMS,QAA7B,0DACFX,EAAcjC,OAAOiD,GAAqB3D,KAAK,SAAA6D,GAC/C,IAAMjE,EAAUsC,EAAKW,MAAMjD,QAAQkC,OAAO,SAAAZ,GAAC,OAAIA,EAAEX,KAAOoD,EAAoBpD,KAAIE,OAAOkD,GACvFzB,EAAKa,SAAS,CACZnD,UACA0D,QAAS,GACTF,UAAW,GACXpC,IAAG,mBAAAP,OAAkBkD,EAAoBnC,UAE1CsC,MAAM,SAAAC,GACJ7B,EAAKa,SAAS,CAAC/B,IAAG,2BAAAP,OAA0BkD,EAAoBnC,KAA9C,+BAGpBU,EAAKa,SAAS,CACZO,QAAS,GACTF,UAAW,KAIflB,EAAKc,eApC0D,CAC/D,IAAM5C,EAAe,CAACoB,KAAMU,EAAKW,MAAMS,QAAS7B,OAAQS,EAAKW,MAAMO,WACnET,EACGxC,OAAOC,GACPJ,KAAK,SAAAC,GACAiC,EAAKa,SAAS,CACZnD,QAASsC,EAAKW,MAAMjD,QAAQa,OAAOR,GACnCqD,QAAS,GACTF,UAAW,GACXpC,IAAG,gBAAAP,OAAeL,EAAaoB,UAGzCU,EAAKc,aAvEPd,EAAKW,MAAQ,CACXjD,QAAS,GACTkC,OAAQ,GACRwB,QAAS,GACTF,UAAW,GACXpC,IAAK,MAPUkB,mFAuBC,IAAA8B,EAAA3B,KAClBM,EACG9C,SACAG,KAAK,SAACC,GACL+D,EAAKjB,SAAS,CACZnD,QAASK,uCA2ER,IAAAgE,EAAA5B,KACD6B,EACkB,KAAtB7B,KAAKQ,MAAMf,OACLO,KAAKQ,MAAMjD,QACXyC,KAAKQ,MAAMjD,QAAQkC,OAAO,SAAAZ,GAAC,OAAIA,EAAEM,KAAK2C,cAAcC,SAASH,EAAKpB,MAAMf,OAAOqC,iBAEvF,OACElD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BAEAF,EAAAC,EAAAC,cAACkD,EAAD,CAAUrD,IAAKqB,KAAKQ,MAAM7B,MAE1BC,EAAAC,EAAAC,cAACmD,EAAD,CAAUxC,OAAQO,KAAKQ,MAAMf,OAAQE,mBAAoBK,KAAKL,qBAE9Df,EAAAC,EAAAC,cAAA,QAAMoD,SAAUlC,KAAKmB,kBACnBvC,EAAAC,EAAAC,cAAA,oBACQF,EAAAC,EAAAC,cAAA,SAAOU,MAAOQ,KAAKQ,MAAMS,QAASvB,SAAUM,KAAKgB,iBAEzDpC,EAAAC,EAAAC,cAAA,sBACUF,EAAAC,EAAAC,cAAA,SAAOqD,KAAK,SAAS3C,MAAOQ,KAAKQ,MAAMO,UAAWrB,SAAUM,KAAKc,mBAE3ElC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQqD,KAAK,UAAb,iBAGJvD,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,wBAGFF,EAAAC,EAAAC,cAAA,aACG+C,EAAcO,IAAI,SAAAC,GAAC,OAAIzD,EAAAC,EAAAC,cAACwD,EAAD,CAAQC,IAAKF,EAAElD,KAAMD,KAAMmD,EAAG/C,aAAcsC,EAAKtC,aAAa+C,kBA3IlFG,IAAMC,WAqJxBC,IAASC,OACP/D,EAAAC,EAAAC,cAAC8D,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.c7bb9428.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const req = axios.get(baseUrl)\n    return req.then(res => res.data)\n}\n\nconst create = (personObject) => {\n    const req  = axios.post(baseUrl, personObject)\n    return req.then(res => res.data)\n}\n\nconst remove = (id) => {\n    const req = axios.delete(`${baseUrl}/${id}`)\n    return req.then(res => res.data)\n}\n\nconst update = (personObject) => {\n    console.log(personObject);\n    const req = axios.put(`${baseUrl}/${personObject.id}`, personObject)\n    return req.then(res => res.data)\n}\n\nexport default { getAll, create, remove, update }","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport personService from './services/persons'\nimport './index.css'\n\nconst Ilmoitus = ({msg}) => {\n  if (msg === null) {\n    return null\n  }\n  return (\n    <div className=\"error\">\n      {msg}\n    </div>\n  )\n}\n\n\nconst Numero = (props) => {\n  return (\n     <tr>\n      <td>{props.info.name}</td>\n      <td>{props.info.number}</td>\n      <td><button onClick={props.handleRemove}>poista</button></td>\n     </tr>\n  )\n}\n\nconst Filtteri = (props) => {\n  return (\n    <div>\n    Rajaa näytettäviä: <input value={props.filter} onChange={props.handleFilterChange}/>\n    </div>\n  )\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      persons: [],\n      filter: '',\n      newName: '',\n      newNumber: '',\n      msg: null,\n    }\n  }\n\n  handleRemove = (personObject) => () => {\n    if(window.confirm(`Poistetaanko ${personObject.name}?`)) {\n      personService.remove(personObject.id)\n      const auxPersons = this.state.persons.filter(obj => obj.id !== personObject.id)\n      this.setState({\n        persons: auxPersons,\n        msg: `Poistettiin ${personObject.name}`\n      })\n      this.clearMsg()\n  }\n  }\n\n  componentDidMount() {\n    personService\n      .getAll()\n      .then((res) => {\n        this.setState({\n          persons: res\n        })\n      })\n      \n  }\n\n\n  handleFilterChange = (event) => {\n    this.setState({\n      filter: event.target.value\n    })\n  }\n\n  handleNewNumber = (event) => {\n    this.setState({\n      newNumber: event.target.value\n    })\n  }\n\n  handleNewName = (event) => {\n    this.setState({\n      newName: event.target.value\n    })\n  }\n\n  clearMsg = () => {\n    setTimeout(() => {\n      this.setState({msg: null})\n    }, 4000)\n  }\n\n  handleNameSubmit = (event) => {\n    event.preventDefault()\n    if(!this.state.persons.find(a => a.name === this.state.newName)) {\n      const personObject = {name: this.state.newName, number: this.state.newNumber}\n      personService\n        .create(personObject)\n        .then(res => {\n              this.setState({\n                persons: this.state.persons.concat(res),\n                newName: '',\n                newNumber: '',\n                msg: `Lisättiin ${personObject.name}`\n              })\n            })\n      this.clearMsg()\n    } else {\n      const personObject = this.state.persons.find(a => a.name === this.state.newName)\n      const changedPersonObject = {...personObject, number: this.state.newNumber}\n\n      if(window.confirm(`${this.state.newName} on jo luettelossa, korvataanko vanha numero uudella?`)) {\n       personService.update(changedPersonObject).then(updated => {\n       const persons = this.state.persons.filter(a => a.id !== changedPersonObject.id).concat(changedPersonObject)\n       this.setState({\n         persons,\n         newName: '',\n         newNumber: '',\n         msg: `Päivitettiin ${changedPersonObject.name}`\n       })})\n       .catch(error => {\n          this.setState({msg: `Muutettavan henkilön ${changedPersonObject.name} tiedot on jo poistettu`})\n       })\n      } else {\n        this.setState({\n          newName: '',\n          newNumber: '',\n        })\n      }\n\n      this.clearMsg()\n      \n    }\n    \n  }\n\n  render() {\n    const personsToShow = \n      this.state.filter === '' ?\n            this.state.persons :\n            this.state.persons.filter(a => a.name.toLowerCase().includes(this.state.filter.toLowerCase()))\n\n    return (\n      <div>\n        <h2>Puhelinluettelo</h2>\n\n        <Ilmoitus msg={this.state.msg}/>\n\n        <Filtteri filter={this.state.filter} handleFilterChange={this.handleFilterChange}/>\n\n        <form onSubmit={this.handleNameSubmit}>\n          <div>\n            nimi: <input value={this.state.newName} onChange={this.handleNewName} />\n          </div>\n          <div>\n            numero: <input type=\"number\" value={this.state.newNumber} onChange={this.handleNewNumber} />\n          </div>\n          <div>\n            <button type=\"submit\">lisää</button>\n          </div>\n        </form>\n        <h2>Numerot</h2>\n        <div>\n          <table>\n            <thead>\n            <tr>\n              <th> Nimi </th>\n              <th> Numero </th>\n            </tr>\n            </thead>\n            <tbody>\n              {personsToShow.map(e => <Numero key={e.name} info={e} handleRemove={this.handleRemove(e)}/>)}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n}\n\n// export default App\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}